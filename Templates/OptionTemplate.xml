<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<!--Запрашивает референсную информацию по поддерживаемым настройкам-->
<!--version - версия схемы данных настроек-->
<referenceOptions version="1.0.0.0">
  
  <!--Общее описание настроек, которое будет выведено в заголовке настроечного файла-->
  <description/>

  <!--Список групп настроек-->
  <optionGroups>
    
    <!--Конкретная группа настроек, их может быть больше одной-->
    <!--name - уникальное название группы настроек. Не может быть пустым-->
    <!--displayName - название группы настроек для отображения пользователям. Атрибут может отсутствовать, тогда полагается, что displayName = null-->
    <!--description - описание группы настроек, которое будет выведено перед названием группы. Атрибут может отсутствовать, тогда полагается, что description = null-->
    <!--secondDescription - описание группы настроек, которое будет выведено после названия группы. Атрибут может отсутствовать, тогда полагается, что secondDescription = null-->
    <!--control - имя контрола, в котором нужно отбразить настройки этой группы. Если не задано никакое имя, то генератор сам принимает решение как отрисовывать настройки группы. Атрибут может отсутствовать, тогда полагается, что control = null-->
    <optionGroup name="" displayName="" description="" secondDescription="" control="">
      
      <!--Настройка, входящая в данную группу-->
      <!--name - уникальное название настройки в пределах группы. Не может быть пустым-->
      <!--displayName - название настроеки для отображения пользователям. Атрибут может отсутствовать, тогда полагается, что displayName = null-->
      <!--description - описание настройки, которое будет выведено перед строкой с настройкой. Атрибут может отсутствовать, тогда полагается, что description = null-->
      <!--defaultValue - значение по-умолчанию. Атрибут может отсутствовать, тогда полагается, что defaultValue = null. Взаимоисключающий атрибут с fileDefaultValue-->
      <!--fileDefaultValue - значение по-умолчанию, читаемое из файла с указанным именем. Атрибут может отсутствовать, тогда полагается, что fileDefaultValue отсутствует. Взаимоисключающий атрибут с defaultValue-->
      <!--valueType - значение типа настройки
      Допустимые значения:
            String = 0,
            Byte = 1,
            Int16 = 2,
            UInt16 = 3,
            Int32 = 4,
            UInt32 = 5,
            Int64 = 6,
            UInt64 = 7,
            Guid = 8,
            Bool = 9,
            Decimal = 10,
            DateTime = 11,
            Date = 12,
            Time = 13,
            TimeSpan = 14,
            NullableByte = 15,
            NullableInt16 = 16,
            NullableUInt16 = 17,
            NullableInt32 = 18,
            NullableUInt32 = 19,
            NullableInt64 = 20,
            NullableUInt64 = 21,
            NullableGuid = 22,
            NullableBool = 23,
            NullableDecimal = 24,
            NullableDateTime = 25,
            NullableDate = 26,
            NullableTime = 27,
            NullableTimeSpan = 28,
            ByteArray = 29
            Атрибут может отсутствовать, тогда полагается, что valueType = String, в значении атрибута можно указывать как код, так и строковый литерал этому коду соответствуюущий
      -->
      <!--control - имя контрола, в котором необходимо отобразить эту настройку. Если имя не задано, то генератор сам принимает решение какой контрол использовать. Если задан контрол у группы, то контролы настройки учитываются только если генератор на знает как отрисовать контрол группы. Атрибут может отсутствовать, тогда полагается, что control = null-->
      <option name="" displayName="" description="" defaultValue="" fileDefaultValue="" valueType="" control="">
        <!--Блоки идущие далее либо должны отсутствовать, либо должен присутствовать один из них-->
        
        <!--Настройка является диапазонной-->
        <!--min - минимальное значение настройки. Атрибут может отсутствовать, тогда полагается, что минимальное значение равно default(T)-->
        <!--max - максимальное значение настройки. Атрибут может отсутствовать, тогда полагается, что максимальное значение равно default(T)-->
        <rangedMinMax min="" max=""/>

        <!--Настройка является диапазонной, у которой нет ограничения снизу-->
        <!--max - максимальное значение настройки. Атрибут может отсутствовать, тогда полагается, что максимальное значение равно default(T)-->
        <rangedMax max=""/>

        <!--Настройка является диапазонной, у которой нет ограничения сверху-->
        <!--min - минимальное значение настройки. Атрибут может отсутствовать, тогда полагается, что минимальное значение равно default(T)-->
        <rangedMin min="" />
        
        <!--Настройка является выбираемым из списка значением-->
        <fixedList>
          <!--Элемент списка-->
          <!--value - значение элемента. Атрибут может отсутствовать, тогда полагается, что value = null-->
          <!--displayValue - значение в отображаемом для пользователя виде. Атрибут может отсутствовать, тогда полагается, что displayValue = value-->
          <listItem value="" displayValue=""/>
        </fixedList>

        <!--Настройка является выбираемым из списка значением, где список получается sql-запросом-->
        <!--query - запрос, выполнив который можно получить список из двух полей в строке. Атрибут не может быть null-->
        <!--valueFieldName - имя поля из которого брать значения для ключей элементов списка. Атрибут может отсутствовать, тогда полагается, что valueFieldName = "value"-->
        <!--displayValueFieldName - имя поля из которого брать значения для отображения с списке. Атрибут может отсутствовать, тогда полагается, что displayValueFieldName = "displayValue"-->
        <sqlFixedList query="" valueFieldName="" displayValueFieldName=""/>

        <!--Настройка является выбираемым из списка набором флагов, где список образован степенями двойки, а результатом выбора является конечное значение флага, являющегося комбинацией выбранных флагов. Имеет смысл только для числовых типов-->
        <flagList>
          <!--Элемент списка-->
          <!--value - значение флага. Атрибут может отсутствовать, тогда полагается, что value = 0-->
          <!--displayValue - значение в отображаемом для пользователя виде. Атрибут может отсутствовать, тогда полагается, что displayValue = value-->
          <listItem value="" displayValue=""/>
        </flagList>

        <!--Настройка является выбираемым из списка набором флагов, где список получается sql-запросом и список образован степенями двойки, а результатом выбора является конечное значение флага, являющегося комбинацией выбранных флагов. Имеет смысл столько для числовых типов-->
        <!--query - запрос, выполнив который можно получить список из двух полей в строке. Атрибут не может быть null-->
        <!--valueFieldName - имя поля из которого брать значения для ключей элементов списка. Атрибут может отсутствовать, тогда полагается, что valueFieldName = "value"-->
        <!--displayValueFieldName - имя поля из которого брать значения для отображения с списке. Атрибут может отсутствовать, тогда полагается, что displayValueFieldName = "displayValue"-->
        <sqlFlagList query="" valueFieldName="" displayValueFieldName=""/>

        <!--Настройка является списком, в котором возможен множественный выбор элементов. Имеет смысл только для строкового типа-->
        <!--sorted - надо или нет учитывать порядок, в котором пользователь выбрал элементы. Допустимые значения: True, 1, False, 0. Атрибут может отсутствовать, тогда полагается, что sorted = "False"-->
        <!--separator - разделитель ключей в результирующей строке. Атрибут может отсутствовать, тогда полагается, что separator = ";"-->
        <multiList sorted="" separator="">
          <!--Элемент списка-->
          <!--value - значение элемента. Атрибут может отсутствовать, тогда полагается, что value = null-->
          <!--displayValue - значение в отображаемом для пользователя виде. Атрибут может отсутствовать, тогда полагается, что displayValue = value-->
          <listItem value="" displayValue=""/>
        </multiList>

        <!--Настройка является списком, в котором возможен множественный выбор элементов, где список получается sql-запросом. Имеет смысл только для строкового типа-->
        <!--sorted - надо или нет учитывать порядок, в котором пользователь выбрал элементы. Допустимые значения: True, 1, False, 0. Атрибут может отсутствовать, тогда полагается, что sorted = "False"-->
        <!--separator - разделитель ключей в результирующей строке. Атрибут может отсутствовать, тогда полагается, что separator = ";"-->
        <!--query - запрос, выполнив который можно получить список из двух полей в строке. Атрибут не может быть null-->
        <!--valueFieldName - имя поля из которого брать значения для ключей элементов списка. Атрибут может отсутствовать, тогда полагается, что valueFieldName = "value"-->
        <!--displayValueFieldName - имя поля из которого брать значения для отображения с списке. Атрибут может отсутствовать, тогда полагается, что displayValueFieldName = "displayValue"-->
        <sqlMultiList sorted="" separator="" query="" valueFieldName="" displayValueFieldName=""/>
        
        <!--Необязательный тег, в котором могут содержаться дополнительные замечания, которые нужно постараться принять во внимание отображающей стороне на уровне настройки-->
        <suggestions>
          <!--Максимальная длина поля-->
          <!--value - собственно сама минимальная длина поля. Целое положительное число типа UInt16. Не может быть null-->
          <minLength value=""/>
          <!--value - собственно сама максимальная длина поля. Целое положительное число типа UInt16. Не может быть null-->
          <maxLength value=""/>
          <!--Предположение о том, что поле должно быть многострочным-->
          <multiline/>
          <!--Минимальное количество строк в многострочном поле-->
          <!--value - собственно само количество строк. Целое положительное число типа Byte. Не может быть null-->
          <minLines value=""/>
          <!--Максимальное количество строк в многострочном поле-->
          <!--value - собственно само количество строк. Целое положительное число типа Byte. Не может быть null-->
          <maxLines value=""/>
          <!--Регулярное выражение для проверки корректности введённого значения-->
          <!--value - само регулярное выражение, которое будет применено к строковому представлению типа поля. String. Не может быть null-->
          <!--validation - текст, которые нужно включить в валидацию для пользователя, если значение не проходит проверку. String. Атрибут может отсутствовать, тогда полагается, что validation = null-->
          <regex value="" validation=""/>
          <!--Следует ли уведомлять те настройки, у которых есть suggestion notifiable о том, что значение настройки изменилось-->
          <notifyOnChange/>
          <!--Следует ли уведомлять эту настройку о факте смены значения настройки с suggestion notifyOnChange. Настройке должна приехать: ссылка на изменившуюся настройку-->
          <notifiable/>
        </suggestions>
      </option>
    
    </optionGroup>
  </optionGroups>
  
</referenceOptions>