<?xml version="1.0" encoding="utf-8"?>
<optionSet version="1" xmlns="http://tempuri.org" xmlns:xsi="http://tempuri.org/2018/Option/XMLSchema-instance" xsi:schemaLocation="http://tempuri.org OptionV1.xsd">
  <option name="name1" displayName="displayName1" description="description1" defaultValue="defaultValue1" valueType="valueType1">

    <!--Если нужно задать DefaultValue, но его нельзя размещать в атрибуте, то его можно задать через ноду. Может присутствовать либо атрибут, либо нода-->
    <defaultValue><![CDATA[]]></defaultValue>

    <!--Настройка является диапазонной-->
    <!--min - минимальное значение настройки. Атрибут может отсутствовать, тогда полагается, что минимальное значение равно default(T)-->
    <!--max - максимальное значение настройки. Атрибут может отсутствовать, тогда полагается, что максимальное значение равно default(T)-->
    <rangedMinMax min="{Constant name=min}" max="{Constant name=max}"/>

    <!--Настройка является диапазонной, у которой нет ограничения снизу-->
    <!--max - максимальное значение настройки. Атрибут может отсутствовать, тогда полагается, что максимальное значение равно default(T)-->
    <rangedMax max=""/>

    <!--Настройка является диапазонной, у которой нет ограничения сверху-->
    <!--min - минимальное значение настройки. Атрибут может отсутствовать, тогда полагается, что минимальное значение равно default(T)-->
    <rangedMin min="" />

    <!--Настройка является выбираемым из списка значением-->
    <fixedList>
      <!--Элемент списка-->
      <!--value - значение элемента. Атрибут может отсутствовать, тогда полагается, что value = null-->
      <!--displayValue - значение в отображаемом для пользователя виде. Атрибут может отсутствовать, тогда полагается, что displayValue = value-->
      <listItem value="" displayValue=""/>
    </fixedList>

    <!--Настройка является выбираемым из списка значением, где список получается sql-запросом-->
    <!--query - запрос, выполнив который можно получить список из двух полей в строке. Атрибут не может быть null-->
    <!--valueFieldName - имя поля из которого брать значения для ключей элементов списка. Атрибут может отсутствовать, тогда полагается, что valueFieldName = "value"-->
    <!--displayValueFieldName - имя поля из которого брать значения для отображения с списке. Атрибут может отсутствовать, тогда полагается, что displayValueFieldName = "displayValue"-->
    <sqlFixedList query="" valueFieldName="" displayValueFieldName=""/>
    
    <!--Настройка является выбираемым из списка набором флагов, где список образован степенями двойки, а результатом выбора является конечное значение флага, являющегося комбинацией выбранных флагов. Имеет смысл только для числовых типов-->
    <flagList>
      <!--Элемент списка-->
      <!--value - значение флага. Атрибут может отсутствовать, тогда полагается, что value = 0-->
      <!--displayValue - значение в отображаемом для пользователя виде. Атрибут может отсутствовать, тогда полагается, что displayValue = value-->
      <listItem value="" displayValue=""/>
    </flagList>

    <!--Настройка является выбираемым из списка набором флагов, где список получается sql-запросом и список образован степенями двойки, а результатом выбора является конечное значение флага, являющегося комбинацией выбранных флагов. Имеет смысл столько для числовых типов-->
    <!--query - запрос, выполнив который можно получить список из двух полей в строке. Атрибут не может быть null-->
    <!--valueFieldName - имя поля из которого брать значения для ключей элементов списка. Атрибут может отсутствовать, тогда полагается, что valueFieldName = "value"-->
    <!--displayValueFieldName - имя поля из которого брать значения для отображения с списке. Атрибут может отсутствовать, тогда полагается, что displayValueFieldName = "displayValue"-->
    <sqlFlagList query="" valueFieldName="" displayValueFieldName=""/>

    <!--Настройка является списком, в котором возможен множественный выбор элементов. Имеет смысл только для строкового типа-->
    <!--sorted - надо или нет учитывать порядок, в котором пользователь выбрал элементы. Допустимые значения: True, 1, False, 0. Атрибут может отсутствовать, тогда полагается, что sorted = "False"-->
    <!--separator - разделитель ключей в результирующей строке. Атрибут может отсутствовать, тогда полагается, что separator = ";"-->
    <multiList sorted="" separator="">
      <!--Элемент списка-->
      <!--value - значение элемента. Атрибут может отсутствовать, тогда полагается, что value = null-->
      <!--displayValue - значение в отображаемом для пользователя виде. Атрибут может отсутствовать, тогда полагается, что displayValue = value-->
      <listItem value="" displayValue=""/>
    </multiList>
    
    <!--Настройка является списком, в котором возможен множественный выбор элементов, где список получается sql-запросом. Имеет смысл только для строкового типа-->
    <!--sorted - надо или нет учитывать порядок, в котором пользователь выбрал элементы. Допустимые значения: True, 1, False, 0. Атрибут может отсутствовать, тогда полагается, что sorted = "False"-->
    <!--separator - разделитель ключей в результирующей строке. Атрибут может отсутствовать, тогда полагается, что separator = ";"-->
    <!--query - запрос, выполнив который можно получить список из двух полей в строке. Атрибут не может быть null-->
    <!--valueFieldName - имя поля из которого брать значения для ключей элементов списка. Атрибут может отсутствовать, тогда полагается, что valueFieldName = "value"-->
    <!--displayValueFieldName - имя поля из которого брать значения для отображения с списке. Атрибут может отсутствовать, тогда полагается, что displayValueFieldName = "displayValue"-->
    <sqlMultiList sorted="" separator="" query="" valueFieldName="" displayValueFieldName=""/>
  </option>

  <!--Может быть 0..*-->
  <group name="name1" displayName="displayName1" description="description1">
    <!--Может быть 0..*-->
    <option name="name3">
      <!--Может быть 0..*-->
      <suggestion name="name6"/>
    </option>
    <!--Может быть 0..*-->
    <group name="name2" displayName="displayName2" description="{Constant name=name1}, {Constant name=name2}">
      <option name="name4"/>
      <option name="name5"/>
    </group>
  </group>

  <!--Может быть 0..*-->
  <constant name="name" value="value" valueType="valueType1"/>
  <constant name="max" value="255" valueType="valueType1"/>
  <constant name="min" value="5" valueType="valueType1"/>

  <!--Может быть 0..*-->
  <suggestion name="name6">
    <!--Максимальная длина поля-->
    <!--value - собственно сама минимальная длина поля. Целое положительное число типа UInt16. Не может быть null-->
    <minLength value="{Constant name=nameofConstant}"/>
    <!--value - собственно сама максимальная длина поля. Целое положительное число типа UInt16. Не может быть null-->
    <maxLength value=""/>
    <!--Предположение о том, что поле должно быть многострочным-->
    <multiline/>
    <!--Минимальное количество строк в многострочном поле-->
    <!--value - собственно само количество строк. Целое положительное число типа Byte. Не может быть null-->
    <minLines value=""/>
    <!--Максимальное количество строк в многострочном поле-->
    <!--value - собственно само количество строк. Целое положительное число типа Byte. Не может быть null-->
    <maxLines value=""/>
    <!--Регулярное выражение для проверки корректности введённого значения-->
    <!--value - само регулярное выражение, которое будет применено к строковому представлению типа поля. String. Не может быть null-->
    <!--validation - текст, которые нужно включить в валидацию для пользователя, если значение не проходит проверку. String. Атрибут может отсутствовать, тогда полагается, что validation = null-->
    <regex value="" validation=""/>
    <!--Следует ли уведомлять те настройки, у которых есть suggestion notifiable о том, что значение настройки изменилось-->
    <notifyOnChange/>
    <!--Следует ли уведомлять эту настройку о факте смены значения настройки с suggestion notifyOnChange. Настройке должна приехать: ссылка на изменившуюся настройку-->
    <notifiable/>
    <control name="nameOfControl" />
  </suggestion>

</optionSet>
